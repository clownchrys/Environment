# Language
LANG=ko_KR.UTF-8
LANGUAGE=ko_KR.UTF-8
LC_ALL=ko_KR.UTF-8

# These variables, used in conjunction, create a new user and set that user's password.
# This user is created in the admin authentication database and given the role of root, which is a "superuser" role.
# The following is an example of using these two variables to create a MongoDB instance and then using the mongo cli to connect against the admin authentication database.
# 
# $ docker run -d --network some-network --name some-mongo \
#     -e MONGO_INITDB_ROOT_USERNAME=mongoadmin \
#     -e MONGO_INITDB_ROOT_PASSWORD=secret \
#     mongo
# 
# $ docker run -it --rm --network some-network mongo \
#     mongo --host some-mongo \
#         -u mongoadmin \
#         -p secret \
#         --authenticationDatabase admin \
#         some-db
# > db.getName();
# some-db
# Both variables are required for a user to be created.
# If both are present then MongoDB will start with authentication enabled (mongod --auth).
# 
# Authentication in MongoDB is fairly complex,
# so more complex user setup is explicitly left to the user via /docker-entrypoint-initdb.d/
# (see the Initializing a fresh instance and Authentication sections below for more details).
# MONGO_INITDB_ROOT_USERNAME=root
# MONGO_INITDB_ROOT_PASSWORD=root

# This variable allows you to specify the name of a database to be used for creation scripts in /docker-entrypoint-initdb.d/*.js (see Initializing a fresh instance below).
# MongoDB is fundamentally designed for "create on first use", so if you do not insert data with your JavaScript files, then no database is created.
MONGO_INITDB_DATABASE=database